# Generated by Django 5.0 on 2025-09-22 06:00

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('admin_site', '0004_termmodel_alter_activitylogmodel_term_and_more'),
        ('human_resource', '0001_initial'),
        ('student', '0006_alter_fingerprintmodel_unique_together_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InventoryAssignmentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_per_student', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('both', 'Both')], default='both', max_length=15)),
                ('term', models.CharField(choices=[('1st term', '1st Term'), ('2nd term', '2nd Term'), ('3rd term', '3rd Term')], max_length=20)),
                ('is_mandatory', models.BooleanField(default=False, help_text='Must all eligible students collect?')),
                ('is_free', models.BooleanField(default=True, help_text='Is this item free or must fees be paid?')),
                ('type', models.CharField(blank=True, choices=[('pri', 'Primary'), ('sec', 'Secondary'), ('mix', 'General')], max_length=10, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_site.sessionmodel')),
                ('student_classes', models.ManyToManyField(blank=True, to='admin_site.classesmodel')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assignment_updates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Inventory Assignment',
                'verbose_name_plural': 'Inventory Assignments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InventoryCollectionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_assigned', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('quantity_collected', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('collection_date', models.DateField(blank=True, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Collection'), ('collected', 'Collected'), ('partially_collected', 'Partially Collected'), ('cancelled', 'Cancelled'), ('returned', 'Returned')], default='pending', max_length=30)),
                ('payment_required', models.BooleanField(default=False)),
                ('amount_paid', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='Amount per student if not free', max_digits=10, null=True)),
                ('payment_completed', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collections', to='inventory.inventoryassignmentmodel')),
                ('collected_by_staff', models.ForeignKey(blank=True, help_text='Staff who handed over the items', null=True, on_delete=django.db.models.deletion.SET_NULL, to='human_resource.staffmodel')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_collections', to='student.studentmodel')),
            ],
            options={
                'verbose_name': 'Inventory Collection',
                'verbose_name_plural': 'Inventory Collections',
                'ordering': ['-created_at'],
                'unique_together': {('assignment', 'student')},
            },
        ),
        migrations.CreateModel(
            name='InventoryReturnModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_returned', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('return_reason', models.CharField(choices=[('damaged', 'Damaged'), ('wrong_size', 'Wrong Size'), ('excess', 'Excess Quantity'), ('duplicate', 'Duplicate Collection'), ('student_left', 'Student Left School'), ('other', 'Other')], max_length=20)),
                ('return_date', models.DateField(default=django.utils.timezone.now)),
                ('item_condition', models.CharField(default='good', max_length=50)),
                ('action_taken', models.CharField(blank=True, help_text='What was done with returned items', max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='returns', to='inventory.inventorycollectionmodel')),
                ('received_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='human_resource.staffmodel')),
            ],
        ),
        migrations.CreateModel(
            name='ItemModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('barcode', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('unit', models.CharField(choices=[('piece', 'Piece'), ('pack', 'Pack'), ('box', 'Box'), ('kg', 'Kilogram'), ('liter', 'Liter'), ('meter', 'Meter'), ('dozen', 'Dozen'), ('carton', 'Carton')], default='piece', max_length=20)),
                ('location', models.CharField(choices=[('shop', 'Shop Only'), ('store', 'Store Only'), ('both', 'Both Shop & Store')], default='both', max_length=10)),
                ('current_selling_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('shop_quantity', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('store_quantity', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('reorder_level', models.DecimalField(decimal_places=2, default=Decimal('10.00'), max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.categorymodel')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='inventoryassignmentmodel',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='inventory.itemmodel'),
        ),
        migrations.CreateModel(
            name='PurchaseAdvanceModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('advance_number', models.CharField(blank=True, max_length=50, unique=True)),
                ('purpose', models.TextField()),
                ('requested_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('approved_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('disbursed_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('request_date', models.DateField(default=django.utils.timezone.now)),
                ('approved_date', models.DateField(blank=True, null=True)),
                ('disbursed_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('disbursed', 'Disbursed'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_advances', to=settings.AUTH_USER_MODEL)),
                ('disbursed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='disbursed_advances', to=settings.AUTH_USER_MODEL)),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='human_resource.staffmodel')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseAdvanceItemModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_description', models.CharField(help_text='Item name - auto-filled if inventory item selected, or enter custom name', max_length=255)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('estimated_unit_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('line_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('item', models.ForeignKey(blank=True, help_text='Select from inventory items or leave blank for custom item', null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.itemmodel')),
                ('advance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.purchaseadvancemodel')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseOrderModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=50, unique=True)),
                ('order_date', models.DateField(default=django.utils.timezone.now)),
                ('expected_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('received', 'Received'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('subtotal', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='human_resource.staffmodel')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseOrderItemModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_description', models.CharField(help_text='Item name - auto-filled if inventory item selected, or enter custom name', max_length=255)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('unit_cost', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('line_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('item', models.ForeignKey(blank=True, help_text='Select from inventory items or leave blank for custom item', null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.itemmodel')),
                ('purchase_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.purchaseordermodel')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseReportModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actual_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('balance_due', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('report_date', models.DateField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('advance', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='report', to='inventory.purchaseadvancemodel')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseReportItemModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_description', models.CharField(help_text='Item name - auto-filled if inventory item selected, or enter custom name', max_length=255)),
                ('quantity_bought', models.DecimalField(decimal_places=2, max_digits=10)),
                ('actual_unit_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('line_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('item', models.ForeignKey(blank=True, help_text='Select from inventory items if applicable', null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.itemmodel')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.purchasereportmodel')),
            ],
        ),
        migrations.CreateModel(
            name='SaleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(blank=True, max_length=50, unique=True)),
                ('sale_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('subtotal', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('discount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('status', models.CharField(choices=[('completed', 'Completed'), ('pending', 'Pending'), ('refunded', 'Refunded'), ('cancelled', 'Cancelled')], default='completed', max_length=20)),
                ('payment_method', models.CharField(default='cash', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='human_resource.staffmodel')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='student.studentmodel')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_site.sessionmodel')),
            ],
        ),
        migrations.CreateModel(
            name='SaleItemModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('unit_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('line_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('profit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.itemmodel')),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.salemodel')),
            ],
        ),
        migrations.CreateModel(
            name='StaffItemRequestModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_number', models.CharField(blank=True, max_length=50, unique=True)),
                ('purpose', models.TextField(help_text='What will these items be used for?')),
                ('request_date', models.DateField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('pending', 'Pending Approval'), ('approved', 'Approved'), ('issued', 'Items Issued'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('approved_date', models.DateField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('issued_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_item_requests', to=settings.AUTH_USER_MODEL)),
                ('issued_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='issued_requests', to='human_resource.staffmodel')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_requests', to='human_resource.staffmodel')),
            ],
        ),
        migrations.CreateModel(
            name='StaffItemRequestItemModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_requested', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('quantity_approved', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('quantity_issued', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('estimated_unit_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.itemmodel')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requested_items', to='inventory.staffitemrequestmodel')),
            ],
        ),
        migrations.CreateModel(
            name='StockOutModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(choices=[('shop', 'Shop'), ('store', 'Store')], max_length=10)),
                ('reason', models.CharField(choices=[('sale', 'Sale to Student'), ('staff_collection', 'Staff Collection'), ('damage', 'Damage'), ('theft', 'Theft'), ('expired', 'Expired'), ('transfer', 'Transfer to Shop'), ('adjustment', 'Stock Adjustment'), ('wastage', 'Wastage')], max_length=20)),
                ('quantity_removed', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('unit_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('total_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('department', models.CharField(blank=True, help_text='Department/Office where items are going', max_length=100, null=True)),
                ('date_removed', models.DateField(default=django.utils.timezone.now)),
                ('reference', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved_by', models.ForeignKey(blank=True, help_text='Who approved this staff collection', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stk_out_cb', to='human_resource.staffmodel')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_outs', to='inventory.itemmodel')),
                ('sale', models.ForeignKey(blank=True, help_text="Sale transaction if reason is 'sale'", null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.salemodel')),
                ('staff_recipient', models.ForeignKey(blank=True, help_text='Staff member who collected the items', null=True, on_delete=django.db.models.deletion.SET_NULL, to='human_resource.staffmodel')),
            ],
        ),
        migrations.CreateModel(
            name='StockTransferModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('transfer_date', models.DateField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='human_resource.staffmodel')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfers', to='inventory.itemmodel')),
            ],
        ),
        migrations.CreateModel(
            name='SupplierModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('contact_person', models.CharField(blank=True, max_length=100, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StockInModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(choices=[('shop', 'Shop'), ('store', 'Store')], max_length=10)),
                ('source', models.CharField(choices=[('purchase', 'Purchase'), ('return', 'Return'), ('adjustment', 'Adjustment'), ('transfer', 'Transfer'), ('donation', 'Donation')], default='purchase', max_length=20)),
                ('quantity_received', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('quantity_remaining', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('unit_cost', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('date_received', models.DateField(default=django.utils.timezone.now)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('batch_number', models.CharField(blank=True, max_length=100, null=True)),
                ('reference', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='human_resource.staffmodel')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_ins', to='inventory.itemmodel')),
                ('purchase_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.purchaseordermodel')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.suppliermodel')),
            ],
        ),
        migrations.AddField(
            model_name='purchaseordermodel',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.suppliermodel'),
        ),
    ]
